---
#- name: Role install
#  hosts: localhost
#  tasks:
#    - name: Install epel role
#      ansible.builtin.command: ansible-galaxy install geerlingguy.repo-epel
#      when: (ansible_facts['distribution'] == 'RedHat') or
#            (ansible_facts['distribution'] == 'Rocky')
#
#    - name: Install community general role
#      ansible.builtin.command: ansible-galaxy collection install community.general
#      when: (ansible_facts['distribution'] == 'RedHat') or
#            (ansible_facts['distribution'] == 'Rocky')

- name: install epel
  hosts: spack
  roles:
    - role: geerlingguy.repo-epel
      when: (ansible_facts['distribution'] == 'RedHat') or
            (ansible_facts['distribution'] == 'Rocky')
  tags: epel

  tasks:
    - name: Enable crb repo
      ansible.builtin.command: /usr/bin/crb --enable
      tags: epel

    - name: Installing Dependencies
      ansible.builtin.yum:
        name: "{{ item }}"
        update_cache: true
        state: present
      with_items:
        - fzf
        - git
        - powerline
        - powerline-fonts
        - python3-pip
        - vim-ansible
        - vim-enhanced
      when: (ansible_facts['distribution'] == 'RedHat') or
            (ansible_facts['distribution'] == 'Rocky')

- name: Configure Powerline
  hosts: spack
  become: yes
  become_user: "{{ username }}"
  vars:
    vim_dir: "{{ ansible_env.HOME }}/.vim"
    vimrc: "{{ ansible_env.HOME }}/.vimrc"

  tasks:
    - name: Ensure .vim/{autoload,bundle} directory exists
      file:
        path: "{{ item }}"
        state: directory
        recurse: no
        mode: 0750
      loop:
        - "{{ vim_dir }}"
        - "{{ vim_dir }}/autoload"
        - "{{ vim_dir }}/bundle"

    - name: Ensure Pathogen is in place
      get_url:
        dest: "{{ vim_dir }}/autoload/pathogen.vim"
        url: https://tpo.pe/pathogen.vim

    - name: Deploy plugins
      git:
        dest: "{{ vim_dir }}/bundle/{{ item.name }}"
        repo: "{{ item.url }}"
        clone: yes
        update: yes
        recursive: no
      loop:
      - name: vim-airline
        url: https://github.com/vim-airline/vim-airline
      - name: nerdtree
        url: https://github.com/preservim/nerdtree
      - name: fzf-vim
        url: https://github.com/junegunn/fzf.vim
      - name: vim-gitgutter
        url: https://github.com/airblade/vim-gitgutter
      - name: vim-fugitive
        url: https://github.com/tpope/vim-fugitive
      - name: vim-floaterm
        url: https://github.com/voldikss/vim-floaterm

    - name: Create .bashrc, .vimrc, and .screenrc
      ansible.builtin.template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        mode: u=rwx
        force: true
        backup: true
      loop:
        - { src: 'templates/bashrc.j2', dest: '{{ ansible_env.HOME }}/.bashrc' }
        - { src: 'templates/vimrc.j2', dest: '{{ ansible_env.HOME }}/.vimrc' }
        - { src: 'templates/screenrc.j2', dest: '{{ ansible_env.HOME }}/.screenrc' }
      tags: dotfiles
